version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: datapulse-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: datapulse
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - datapulse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: datapulse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - datapulse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: datapulse-backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=datapulse
      - REDIS_SERVER=redis
    networks:
      - datapulse-network
    volumes:
      - ./backend:/app

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: datapulse-celery-worker
    depends_on:
      - postgres
      - redis
      - backend
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=datapulse
      - REDIS_SERVER=redis
    networks:
      - datapulse-network
    volumes:
      - ./backend:/app

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile.flower
    container_name: datapulse-flower
    ports:
      - "5555:5555"
    depends_on:
      - postgres
      - redis
      - celery-worker
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=datapulse
      - REDIS_SERVER=redis
    networks:
      - datapulse-network
    volumes:
      - ./backend:/app

networks:
  datapulse-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
